name: Daily Scan

on:
  schedule:
    - cron: "0 22 * * 1-5"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pandas numpy yfinance

      - name: Build combined.csv
        run: |
          START=$(date -u -d '300 days ago' +%F)
          python -m swing_systems.bin.build_data \
            --universe configs/universe.yaml \
            --start "$START" \
            --batch 200 \
            --sleep 0.05 \
            --top 150 \
            --multi

      - name: Build per-strategy watchlists
        run: |
          python -m swing_systems.bin.build_watchlists \
            --combined data/combined.csv \
            --outdir configs/watchlists \
            --lookback 120

      - name: Run all strategies
        run: |
          python -m swing_systems.bin.run_double_seven \
            --universe configs/universe.yaml \
            --include-file configs/watchlists/double_seven.yaml
          python -m swing_systems.bin.run_rsi2_us \
            --universe configs/universe.yaml \
            --include-file configs/watchlists/rsi2_us.yaml
          python -m swing_systems.bin.run_rsi2_5_70_sso \
            --universe configs/universe.yaml \
            --include-file configs/watchlists/rsi2_5_70_sso.yaml
          python -m swing_systems.bin.run_connors_3d_hl \
            --universe configs/universe.yaml \
            --include-file configs/watchlists/connors_3d_hl.yaml

      - name: Package outputs
        run: |
          mkdir -p docs
          zip -r docs/swing-results-latest.zip outputs state
          cp docs/swing-results-latest.zip docs/swing-results-$(date -u +%Y%m%d).zip
          echo "<html><body><a href='swing-results-latest.zip'>Download Latest</a></body></html>" > docs/index.html
          touch docs/.nojekyll

      - name: Commit and push results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add outputs/** state/** docs/**
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Auto-update results $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin main
          fi